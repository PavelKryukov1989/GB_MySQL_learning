/* 1) Пусть в таблице users поля created_at и updated_at оказались незаполненными.
 Заполните их текущими датой и временем. */

USE shops;
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) COMMENT 'Имя покупателя',
  birthday_at DATE COMMENT 'Дата рождения',
  created_at DATETIME, 
  updated_at DATETIME
) COMMENT = 'Покупатели';
SELECT * from users;

INSERT INTO users (name, birthday_at) VALUES
  ('Геннадий', '1990-10-05'),
  ('Наталья', '1984-11-12'),
  ('Александр', '1985-05-20'),
  ('Сергей', '1988-02-14'),
  ('Иван', '1998-01-12'),
  ('Мария', '1992-08-29');

UPDATE shop.users SET 
created_at = now(),
updated_at = now()
where id<=5; 

/* 2) Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них
 долгое время помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME,
сохранив введённые ранее значения. */

DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) COMMENT 'Имя покупателя',
  birthday_at DATE COMMENT 'Дата рождения',
  created_at varchar(50),
  updated_at varchar(50)
) COMMENT = 'Покупатели';
SELECT * from users;

INSERT INTO users (name, birthday_at, created_at, updated_at) VALUES
  ('Геннадий', '1990-10-05', '20.10.2017 8:10', '20.10.2017 8:10'),
  ('Наталья', '1984-11-12', '20.10.2017 8:10', '20.10.2017 8:10'),
  ('Александр', '1985-05-20', '20.10.2017 8:10', '20.10.2017 8:10'),
  ('Сергей', '1988-02-14', '20.10.2017 8:10', '20.10.2017 8:10'),
  ('Иван', '1998-01-12', '20.10.2017 8:10', '20.10.2017 8:10'),
  ('Мария', '1992-08-29', '20.10.2017 8:10', '20.10.2017 8:10');

ALTER TABLE users DROP column created_at;
ALTER TABLE users DROP column updated_at;

ALTER TABLE users ADD created_at DATETIME;
ALTER TABLE users ADD updated_at DATETIME;

UPDATE shop.users SET 
created_at = '2017.10.20 8:10',
updated_at = '2017.10.20 8:10'
where id<=5; 
SELECT * from users;

SELECT name, birthday_at,
DATE_FORMAT(created_at, '%d.%m.%Y %H:%i') as created_at,
DATE_FORMAT(updated_at, '%d.%m.%Y %H:%i') as updated_at 
FROM users;

/* 3) В таблице складских запасов storehouses_products в поле value могут встречаться
 самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы.
Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value.
 Однако нулевые запасы должны выводиться в конце, после всех записей. */

 DROP TABLE IF EXISTS storehouses_products;
CREATE TABLE storehouses_products (
  id SERIAL PRIMARY KEY,
  storehouse_id INT UNSIGNED,
  product_id INT UNSIGNED,
  value INT UNSIGNED COMMENT 'Запас товарной позиции на складе',
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) COMMENT = 'Запасы на складе';

INSERT INTO storehouses_products (value) VALUES
  (0),
  (2500),
  (0),
  (30),
  (500),
  (1);
  
SELECT value FROM storehouses_products ORDER BY IF (value>0,1,2),value; 

/* 4)  (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае.
 Месяцы заданы в виде списка английских названий (may, august). */

SELECT name, birthday_at,
CASE 
	WHEN MONTH(birthday_at) = 8 THEN 'Август'
    WHEN MONTH(birthday_at) = 5 THEN 'Май'
    END as Mounth
    FROM users where MONTH(birthday_at) = 08 or MONTH(birthday_at) = 05;

/* 5)   (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. 
  SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN. */

  SELECT *FROM catalogs WHERE id=5
  UNION
  SELECT *FROM catalogs WHERE id=1 or id=2;

/* 6) Подсчитайте средний возраст пользователей в таблице users. */

SELECT 
ROUND(AVG(FLOOR((TO_DAYS(NOW()) - TO_DAYS(birthday_at))/365.25)),0) as Average_Age
FROM users;

/* 7) Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели.
Следует учесть, что необходимы дни недели текущего года, а не года рождения. */

WITH current_date_of_B AS
(SELECT DATE_FORMAT(birthday_at, "%2021.%m.%d") as current_date_of_Birthday FROM users) 
SELECT DATE_FORMAT(current_date_of_Birthday, "%W") as Day_of_birthday, COUNT(*) as Once_a_year FROM current_date_of_B GROUP BY Day_of_birthday;

/* 8) (по желанию) Подсчитайте произведение чисел в столбце таблицы. */

DROP TABLE numbers;  
CREATE TABLE numbers 
(`value` INT COMMENT 'Числа в таблице')
COMMENT = "Таблица чисел";

INSERT INTO numbers (`value`) VALUES (1),(2),(3),(4),(5);

SELECT * FROM numbers;

SELECT ROUND (exp(sum(ln(value))),0) as MULT from numbers; 


